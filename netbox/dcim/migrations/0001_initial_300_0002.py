# Generated by Django 3.2.4 on 2021-07-06 20:33

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    replaces = [
        ('dcim', '0002_auto_20160622_1821'),
        ('dcim', '0003_auto_20160628_1721'),
        ('dcim', '0004_auto_20160701_2049'),
        ('dcim', '0005_auto_20160706_1722'),
        ('dcim', '0006_add_device_primary_ip4_ip6'),
        ('dcim', '0007_device_copy_primary_ip'),
        ('dcim', '0008_device_remove_primary_ip'),
        ('dcim', '0009_site_32bit_asn_support'),
        ('dcim', '0010_devicebay_installed_device_set_null'),
        ('dcim', '0011_devicetype_part_number'),
        ('dcim', '0012_site_rack_device_add_tenant'),
        ('dcim', '0013_add_interface_form_factors'),
        ('dcim', '0014_rack_add_type_width'),
        ('dcim', '0015_rack_add_u_height_validator'),
        ('dcim', '0016_module_add_manufacturer'),
        ('dcim', '0017_rack_add_role'),
        ('dcim', '0018_device_add_asset_tag'),
        ('dcim', '0019_new_iface_form_factors'),
        ('dcim', '0020_rack_desc_units'),
        ('dcim', '0021_add_ff_flexstack'),
        ('dcim', '0022_color_names_to_rgb'),
        ('dcim', '0023_devicetype_comments'),
        ('dcim', '0024_site_add_contact_fields'),
        ('dcim', '0025_devicetype_add_interface_ordering'),
        ('dcim', '0026_add_rack_reservations'),
        ('dcim', '0027_device_add_site'),
        ('dcim', '0028_device_copy_rack_to_site'),
        ('dcim', '0029_allow_rackless_devices'),
        ('dcim', '0030_interface_add_lag'),
        ('dcim', '0031_regions'),
        ('dcim', '0032_device_increase_name_length'),
        ('dcim', '0033_rackreservation_rack_editable'),
        ('dcim', '0034_rename_module_to_inventoryitem'),
        ('dcim', '0035_device_expand_status_choices'),
        ('dcim', '0036_add_ff_juniper_vcp'),
        ('dcim', '0037_unicode_literals'),
        ('dcim', '0038_wireless_interfaces'),
        ('dcim', '0039_interface_add_enabled_mtu'),
        ('dcim', '0040_inventoryitem_add_asset_tag_description'),
        ('dcim', '0041_napalm_integration'),
        ('dcim', '0042_interface_ff_10ge_cx4'),
        ('dcim', '0043_device_component_name_lengths'),
        ('dcim', '0044_virtualization'),
        ('dcim', '0045_devicerole_vm_role'),
        ('dcim', '0046_rack_lengthen_facility_id'),
        ('dcim', '0047_more_100ge_form_factors'),
        ('dcim', '0048_rack_serial'),
        ('dcim', '0049_rackreservation_change_user'),
        ('dcim', '0050_interface_vlan_tagging'),
        ('dcim', '0051_rackreservation_tenant'),
        ('dcim', '0052_virtual_chassis'),
        ('dcim', '0053_platform_manufacturer'),
        ('dcim', '0054_site_status_timezone_description'),
        ('dcim', '0055_virtualchassis_ordering'),
        ('dcim', '0056_django2'),
        ('dcim', '0057_tags'),
        ('dcim', '0058_relax_rack_naming_constraints'),
        ('dcim', '0059_site_latitude_longitude'),
        ('dcim', '0060_change_logging'),
        ('dcim', '0061_platform_napalm_args'),
        ('dcim', '0062_interface_mtu'),
        ('dcim', '0063_device_local_context_data'),
        ('dcim', '0064_remove_platform_rpc_client'),
        ('dcim', '0065_front_rear_ports'),
        ('dcim', '0066_cables'),
        ('dcim', '0067_device_type_remove_qualifiers'),
        ('dcim', '0068_rack_new_fields'),
        ('dcim', '0069_deprecate_nullablecharfield'),
        ('dcim', '0070_custom_tag_models'),
        ('dcim', '0071_device_components_add_description'),
        ('dcim', '0072_powerfeeds'),
        ('dcim', '0073_interface_form_factor_to_type'),
        ('dcim', '0074_increase_field_length_platform_name_slug'),
        ('dcim', '0075_cable_devices'),
        ('dcim', '0076_console_port_types'),
        ('dcim', '0077_power_types'),
        ('dcim', '0078_3569_site_fields'),
        ('dcim', '0079_3569_rack_fields'),
        ('dcim', '0080_3569_devicetype_fields'),
        ('dcim', '0081_3569_device_fields'),
        ('dcim', '0082_3569_interface_fields'),
        ('dcim', '0082_3569_port_fields'),
        ('dcim', '0083_3569_cable_fields'),
        ('dcim', '0084_3569_powerfeed_fields'),
        ('dcim', '0085_3569_poweroutlet_fields'),
        ('dcim', '0086_device_name_nonunique'),
        ('dcim', '0087_role_descriptions'),
        ('dcim', '0088_powerfeed_available_power'),
        ('dcim', '0089_deterministic_ordering'),
        ('dcim', '0090_cable_termination_models'),
        ('dcim', '0091_interface_type_other'),
        ('dcim', '0092_fix_rack_outer_unit'),
        ('dcim', '0093_device_component_ordering'),
        ('dcim', '0094_device_component_template_ordering'),
        ('dcim', '0095_primary_model_ordering'),
        ('dcim', '0096_interface_ordering'),
        ('dcim', '0097_interfacetemplate_type_other'),
        ('dcim', '0098_devicetype_images'),
        ('dcim', '0099_powerfeed_negative_voltage'),
        ('dcim', '0100_mptt_remove_indexes'),
        ('dcim', '0101_nested_rackgroups'),
        ('dcim', '0102_nested_rackgroups_rebuild'),
        ('dcim', '0103_standardize_description'),
        ('dcim', '0104_correct_infiniband_types'),
        ('dcim', '0105_interface_name_collation'),
        ('dcim', '0106_role_default_color'),
        ('dcim', '0107_component_labels'),
        ('dcim', '0108_add_tags'),
        ('dcim', '0109_interface_remove_vm'),
        ('dcim', '0110_virtualchassis_name'),
        ('dcim', '0111_component_template_description'),
        ('dcim', '0112_standardize_components'),
        ('dcim', '0113_nullbooleanfield_to_booleanfield'),
        ('dcim', '0114_update_jsonfield'),
        ('dcim', '0115_rackreservation_order'),
        ('dcim', '0116_rearport_max_positions'),
        ('dcim', '0117_custom_field_data'),
        ('dcim', '0118_inventoryitem_mptt'),
        ('dcim', '0119_inventoryitem_mptt_rebuild'),
        ('dcim', '0120_cache_cable_peer'),
        ('dcim', '0121_cablepath'),
        ('dcim', '0122_standardize_name_length'),
        ('dcim', '0123_standardize_models'),
        ('dcim', '0124_mark_connected'),
        ('dcim', '0125_console_port_speed'),
        ('dcim', '0126_rename_rackgroup_location'),
        ('dcim', '0127_device_location'),
        ('dcim', '0128_device_location_populate'),
        ('dcim', '0129_interface_parent'),
        ('dcim', '0130_sitegroup'),
        ('dcim', '0131_consoleport_speed'),
        ('dcim', '0132_cable_length'),
        ('dcim', '0133_port_colors'),
    ]

    dependencies = [
        ('tenancy', '0001_initial_300'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('dcim', '0001_initial_300'),
        ('extras', '0001_initial_300'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='virtualchassis',
            name='tags',
            field=taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag'),
        ),
        migrations.AddField(
            model_name='sitegroup',
            name='parent',
            field=mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='dcim.sitegroup'),
        ),
        migrations.AddField(
            model_name='site',
            name='group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sites', to='dcim.sitegroup'),
        ),
        migrations.AddField(
            model_name='site',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sites', to='dcim.region'),
        ),
        migrations.AddField(
            model_name='site',
            name='tags',
            field=taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag'),
        ),
        migrations.AddField(
            model_name='site',
            name='tenant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='sites', to='tenancy.tenant'),
        ),
        migrations.AddField(
            model_name='region',
            name='parent',
            field=mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='dcim.region'),
        ),
        migrations.AddField(
            model_name='rearporttemplate',
            name='device_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rearporttemplates', to='dcim.devicetype'),
        ),
        migrations.AddField(
            model_name='rearport',
            name='_cable_peer_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='rearport',
            name='cable',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='dcim.cable'),
        ),
        migrations.AddField(
            model_name='rearport',
            name='device',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rearports', to='dcim.device'),
        ),
        migrations.AddField(
            model_name='rearport',
            name='tags',
            field=taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag'),
        ),
        migrations.AddField(
            model_name='rackreservation',
            name='rack',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='dcim.rack'),
        ),
        migrations.AddField(
            model_name='rackreservation',
            name='tags',
            field=taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag'),
        ),
        migrations.AddField(
            model_name='rackreservation',
            name='tenant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='rackreservations', to='tenancy.tenant'),
        ),
        migrations.AddField(
            model_name='rackreservation',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='rack',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='racks', to='dcim.location'),
        ),
        migrations.AddField(
            model_name='rack',
            name='role',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='racks', to='dcim.rackrole'),
        ),
        migrations.AddField(
            model_name='rack',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='racks', to='dcim.site'),
        ),
        migrations.AddField(
            model_name='rack',
            name='tags',
            field=taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag'),
        ),
        migrations.AddField(
            model_name='rack',
            name='tenant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='racks', to='tenancy.tenant'),
        ),
        migrations.AddField(
            model_name='powerporttemplate',
            name='device_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='powerporttemplates', to='dcim.devicetype'),
        ),
        migrations.AddField(
            model_name='powerport',
            name='_cable_peer_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='powerport',
            name='_path',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dcim.cablepath'),
        ),
        migrations.AddField(
            model_name='powerport',
            name='cable',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='dcim.cable'),
        ),
        migrations.AddField(
            model_name='powerport',
            name='device',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='powerports', to='dcim.device'),
        ),
        migrations.AddField(
            model_name='powerport',
            name='tags',
            field=taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag'),
        ),
        migrations.AddField(
            model_name='powerpanel',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='dcim.location'),
        ),
        migrations.AddField(
            model_name='powerpanel',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dcim.site'),
        ),
        migrations.AddField(
            model_name='powerpanel',
            name='tags',
            field=taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag'),
        ),
        migrations.AddField(
            model_name='poweroutlettemplate',
            name='device_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='poweroutlettemplates', to='dcim.devicetype'),
        ),
        migrations.AddField(
            model_name='poweroutlettemplate',
            name='power_port',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='poweroutlet_templates', to='dcim.powerporttemplate'),
        ),
        migrations.AddField(
            model_name='poweroutlet',
            name='_cable_peer_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='poweroutlet',
            name='_path',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dcim.cablepath'),
        ),
        migrations.AddField(
            model_name='poweroutlet',
            name='cable',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='dcim.cable'),
        ),
        migrations.AddField(
            model_name='poweroutlet',
            name='device',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='poweroutlets', to='dcim.device'),
        ),
        migrations.AddField(
            model_name='poweroutlet',
            name='power_port',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='poweroutlets', to='dcim.powerport'),
        ),
        migrations.AddField(
            model_name='poweroutlet',
            name='tags',
            field=taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag'),
        ),
        migrations.AddField(
            model_name='powerfeed',
            name='_cable_peer_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='powerfeed',
            name='_path',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dcim.cablepath'),
        ),
        migrations.AddField(
            model_name='powerfeed',
            name='cable',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='dcim.cable'),
        ),
        migrations.AddField(
            model_name='powerfeed',
            name='power_panel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='powerfeeds', to='dcim.powerpanel'),
        ),
        migrations.AddField(
            model_name='powerfeed',
            name='rack',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='dcim.rack'),
        ),
        migrations.AddField(
            model_name='powerfeed',
            name='tags',
            field=taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag'),
        ),
        migrations.AddField(
            model_name='platform',
            name='manufacturer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='platforms', to='dcim.manufacturer'),
        ),
        migrations.AddField(
            model_name='location',
            name='parent',
            field=mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='dcim.location'),
        ),
        migrations.AddField(
            model_name='location',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='dcim.site'),
        ),
        migrations.AddField(
            model_name='inventoryitem',
            name='device',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventoryitems', to='dcim.device'),
        ),
        migrations.AddField(
            model_name='inventoryitem',
            name='manufacturer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='inventory_items', to='dcim.manufacturer'),
        ),
        migrations.AddField(
            model_name='inventoryitem',
            name='parent',
            field=mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_items', to='dcim.inventoryitem'),
        ),
        migrations.AddField(
            model_name='inventoryitem',
            name='tags',
            field=taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag'),
        ),
        migrations.AddField(
            model_name='interfacetemplate',
            name='device_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interfacetemplates', to='dcim.devicetype'),
        ),
        migrations.AddField(
            model_name='interface',
            name='_cable_peer_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='interface',
            name='_path',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dcim.cablepath'),
        ),
        migrations.AddField(
            model_name='interface',
            name='cable',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='dcim.cable'),
        ),
        migrations.AddField(
            model_name='interface',
            name='device',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interfaces', to='dcim.device'),
        ),
        migrations.AddField(
            model_name='interface',
            name='lag',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='member_interfaces', to='dcim.interface'),
        ),
        migrations.AddField(
            model_name='interface',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='child_interfaces', to='dcim.interface'),
        ),
    ]
